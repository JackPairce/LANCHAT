* {
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
  user-select: none;
}

:root {
  --Black: #262626;
  --Dark: #333;
  --sDark: #505050;
  --NotDark: white;
  --color: white;
  --Blue: #3a51c0;
  --BGC: #0093E9; 
  --BGI: linear-gradient(160deg, #0093E9 0%, #80D0C7 100%);
  --sender: #0051fe;
  --receiver: #1f0090;
  --transparent: transparent;
}

.lightMode {
  --Black: #b7b7b7;
  --Dark: #fff;
  --sDark: #cfcfcf;
  --NotDark: rgb(0, 0, 0);
  --color: black;
  --Blue: #0059ff;
  --sender: #0051fe;
  --receiver: #1f0090;
  --transparent: transparent;
}

.lightslategrey{
  --BGC: #0093E9; 
  --BGI: linear-gradient(160deg, #0093E9 0%, #80D0C7 100%);
}
.beige{
  --BGC: #FFE53B;
  --BGI: linear-gradient(147deg, #FFE53B 0%, #FF2525 74%);
}
.maroon{
  --BGC: #F4D03F;
  --BGI: linear-gradient(132deg, #F4D03F 0%, #16A085 100%);
}
.cadetblue{
  --BGC: rgba(226,5,5,1);
  --BGI: radial-gradient( circle 349px at 7.4% 22.1%,  rgba(226,5,5,1) 0%, rgba(133,2,229,1) 100.7% );
}
.coral{
  --BGC: rgba(255,67,5,1);
  --BGI: linear-gradient( 107deg,  rgba(255,67,5,1) 11.1%, rgba(245,135,0,1) 95.3% );
}

body,
html {
  display: flex;
  flex-direction: column;
  position: relative;
  background-color: var(--Dark);
  margin: 0;
  padding: 0;
  height: 100%;
  overflow: hidden;
}

header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: var(--Dark);
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: row;
  z-index: 7;
  padding: 0 10px 0 10px;
}

#TopNav button:hover,
#TopNav button.Select {
  translate: 0 10px;
  opacity: 1;
}

#TopNav button svg {
  position: relative;
  transition: 0.5s;
}

#TopNav button::before {
  content: attr(count);
  position: absolute;
  width: 20px;
  aspect-ratio: 1;
  z-index: 99;
  border-radius: 50%;
  right: 10px;
  top: -5px;
  outline: 3px solid var(--Dark);
  background-color: red;
  display: var(--NTF,none);
  justify-content: center;
  align-items: center;
  color: var(--color);
}

#TopNav button:hover svg {
  scale: 1.1;
}

#TopNav button {
  background-color: transparent;
  border: none;
  cursor: pointer;
  width: 70px;
  opacity: 0.5;
  translate: 0 20px;
  transition: 0.5s;
}

#TopNav button p {
  color: var(--color);
  translate: 0 -20px;
  opacity: 0;
  transition: 0.5s;
}

#TopNav button:hover p,
#TopNav button.Select p {
  opacity: 1;
  translate: 0;
}

#TopNav button svg path {
  /* filter: invert(1); */
}

#TopNav #Selector {
  height: 5px;
  width: 70px;
  border-radius: 10px;
  background-color: var(--color);
  transition: 0.5s;
}

#TopNav button:nth-child(1).Select ~ #Selector {
  translate: 0;
}

#TopNav button:nth-child(2).Select ~ #Selector {
  translate: 75px;
}

#TopNav button:nth-child(3).Select ~ #Selector {
  translate: 149px;
}

#TopNav button:nth-child(4).Select ~ #Selector {
  translate: 225px;
}

#switcher {
  width: 400%;
  height: 100%;
  top: 0;
  bottom: 0;
  padding-top: 120px;
  display: flex;
  scroll-behavior: smooth;
  scroll-snap-type: x mandatory;
}

lister {
  width: 100%;
  height: 0%;
  z-index: 998;
  background-color: var(--Dark);
  position: fixed;
  overflow-y: auto;
}
lister #ClearCall{
  color: red;
  border: none;
  background-color: transparent;
  outline: none;
  cursor: pointer;
  font-size: 20px;
  font-weight: 600;
  position: absolute;
  right: 5%;
}
lister #ClearCall:hover{
  color: rgba(255, 0, 0, 0.749);
}
lister div{
  display: none;
}
lister p:not(contact p){
  width: 40%;
  text-align: center;
}

lister.listup h1 {
  align-self: center;
  text-align: center;
  color: var(--color);
}
lister.listup div {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 10px 20px;
  padding: 10px;
  font-size: 20px;
  color: var(--color);
  border-bottom: 1px solid var(--color);
}
lister button {
  background: transparent;
  outline: none;
  border: none;
}
lister.listup {
  padding-top: 30px;
  height: 100%;
}

#CHATui,
#Call,
#VCall,
#Grp {
  width: 25%;
  padding-left: 100px;
  display: inline-block;
  scroll-snap-align: center;
  position: relative;
  transition: 0.2s;
}

#Call.hide,
#Grp.hide {
  width: 25%;
}
#Call,
#VCall {
  padding-left: 0;
}

#Grp.hide .Cover,
#Call.hide .Cover {
  position: absolute;
  inset: 0;
  background-color: var(--Dark);
  transition: 0.5s;
  z-index: 4;
}

#Call {
  background-color: var(--Dark);
}

#Call #Panel,
#VCall #VPanel {
  position: relative;
  height: 100%;
  width: 100%;
  border-radius: 10px;
  padding: 2px;
  background-color: var(--BGC);
  background-image: var(--BGI);
}

#Call #Panel > div,
#VCall #VPanel > div {
  margin-bottom: 10px;
}

#VCall #Vusers,
#Call #users {
  width: 100%;
  height: 70%;
  border-radius: 10px;
  padding: 5px;
  background-color: var(--receiver);
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 5px;
  position: relative;
  transition: 0.4s;
}
#VCall #Vusers.large,
#Call #users.large {
  height: 80%;
}

#Call #users div,
#VCall #Vusers #HisWebCam.novideo + div:not(#MyWebCam),
#VCall #Vusers #HisWebCam {
  background-color: #333399;
  width: 100%;
  height: 100%;
  min-height: 20px;
  border-radius: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  display: block;
}

#VCall #Vusers #MyWebCam.novideo,
#VCall #Vusers #HisWebCam.novideo,
#VCall #Vusers div:not(#HisWebCam,#MyWebCam){
  display: none;
}

#VCall #Vusers #MyWebCam.novideo + div:not(#HisWebCam),
#VCall #Vusers #MyWebCam {
  display: block;
  background-color: #333399;
  width: 30%;
  min-width: 30%;
  top: 5px;
  right: 5px;
  border-radius: 10px;
  position: absolute;
  outline: 5px solid var(--receiver);
  z-index: 2;
  border-radius: 0 10px 0 10px ;
}

#Call #users div .circle {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  background-color: #000;
  position: absolute;
}

#Call #users div contact {
  position: relative;
  scale: 200%;
  z-index: 3;
}

#Call #audiotrack {
  position: relative;
  width: 100%;
  height: 10%;
  border-radius: 10px;
  overflow: hidden;
  background-color: rgb(255, 255, 255);
  transition: 0.4s;
}
#Call #audiotrack.mute {
  height: 0%;
}

#audiotrackcanvas {
  position: absolute;
  translate: 0 -30%;
  width: 100%;
  height: 250%;
  background-color: var(--receiver);
}

#Call #controls,
#VCall #Vcontrols {
  display: flex;
  justify-content: space-around;
  align-items: center;
  width: 100%;
  height: 15%;
  border-radius: 10px;
  background-color: var(--receiver);
}
#Call #controls timer,
#VCall #Vcontrols vtimer {
  font-size: 20px;
  font-weight: 600;
  color: white;
}

#VCall #Vcontrols {
  height: 25%;
}

#VCall #Vcontrols button,
#Call #controls button {
  height: 50px;
  width: 50px;
  border: none;
  outline: none;
  border-radius: 50%;
  opacity: 0.7;
  transition: 0.4s;
  cursor: pointer;
  background-color: var(--Dark);
}
#VCall #Vcontrols button:hover,
#Call #controls button:hover {
  opacity: 1;
}

#Call #controls #CloseCall,
#VCall #Vcontrols #VCloseCall {
  background-color: red;
  height: 70px;
  width: 70px;
}
#Call #controls #CloseCall {
  rotate: 135deg;
}
#Call #controls #CallMic.mute,
#VCall #Vcontrols #VCallCam.mute,
#VCall #Vcontrols #VCallMic.mute {
  background-color: red;
  position: relative;
}
#VCall #Vcontrols #VCallCam {
  padding-top: 5px;
}
#Call #controls #CallMic::before,
#VCall #Vcontrols #VCallCam::before,
#VCall #Vcontrols #VCallMic::before {
  content: "";
  height: 2px;
  width: 40px;
  background: #000;
  position: absolute;
  rotate: 45deg;
  top: 23px;
  left: 6px;
  border-radius: 10px;
  outline: 4px solid white;
  visibility: hidden;
  transform: 0.2s;
}
#Call #controls #CallMic.mute::before,
#VCall #Vcontrols #VCallMic.mute::before {
  outline: 3px solid red;
  visibility: visible;
}

#VCall #Vcontrols #VCloseCall svg,
#VCallRec svg,
#Call #Vcontrols #VCloseCall svg,
#CallRec svg {
  rotate: 135deg;
  translate: 0 2px;
}

#VCall {
  background-color: green;
}

#Grp {
  background-color: var(--Dark);
}
.Chat contact {
  position: absolute;
  top: -10px;
  left: -65px;
  scale: 0.8;
}
#Grp receiver,
#Grp .receiver {
  margin-left: 60px;
  border-radius: 20px;
}

#Grp receiver.border-top,
#Chat receiver.border-top,
#Grp .receiver.border-top,
#Chat .receiver.border-top {
  border-top-left-radius: 5px;
}

#Grp receiver.border-bottom,
#Chat receiver.border-bottom,
#Grp .receiver.border-bottom,
#Chat .receiver.border-bottom {
  border-bottom-left-radius: 5px;
}
#Grp sender.border-top,
#Chat sender.border-top,
#Grp .sender.border-top,
#Chat .sender.border-top {
  border-top-right-radius: 5px;
}

#Grp sender.border-bottom,
#Chat sender.border-bottom,
#Grp .sender.border-bottom,
#Chat .sender.border-bottom {
  border-bottom-right-radius: 5px;
}

#setting {
  top: 30px;
  left: 40px;
  height: 50px;
  width: 50px;
  color: var(--color);
  background-color: var(--Black);
  position: fixed;
  border-radius: 10px;
  z-index: 7;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  transition: 0.9s;
  opacity: 0;
}

#setting.show {
  top: 10px;
  left: 20px;
  height: 180px;
  width: 400px;
  opacity: 1;
}

#setting h1 {
  position: relative;
  width: 250px;
  left: 110px;
  display: flex;
  flex-direction: column;
  text-align: center;
}

#setting div,
#STG #Content div:not(.zoom) {
  padding: 0;
  display: grid;
  gap: 20px;
  grid-template-columns: 50% 50%;
  align-items: center;
  justify-content: center;
}

.zoom {
  padding: 0;
  display: grid;
  gap: 20px;
  grid-template-columns: 50% 50%;
}

.zoom p {
  grid-column: 1 / 2;
}

.switch {
  position: relative;
  display: inline-block;
  width: 65px;
  max-height: 35px;
  min-height: 35px;
}

#setting p {
  padding-left: 20px;
  color: var(--color);
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  align-self: center;
  position: absolute;
  cursor: pointer;
  inset: 0;
  background-color: #ccc;
  -webkit-transition: 0.4s;
  transition: 0.4s;
  border-radius: 34px;
}
.slider:hover :before {
  background-color: #8b8b8b;
}

.slider:before {
  position: absolute;
  content: "";
  height: 28px;
  width: 28px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: 0.4s;
  transition: 0.4s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: #2196f3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196f3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

#STG input[type="range"] {
  margin: 0 40px;
  /* width: 50%; */
}

#STG input[type="range"]::before {
  content: "-";
  color: var(--color);
  font-size: 40px;
  position: absolute;
  translate: -40px;
}

#STG input[type="range"]::after {
  content: "+";
  color: var(--color);
  font-size: 40px;
  position: absolute;
  right: 50px;
}

/* #setting *{border: 1px solid red;} */

#setting button {
  position: relative;
  height: 50px;
  background: transparent;
  color: var(--color);
  cursor: pointer;
  transition: 0.4s;
  display: flex;
  justify-content: space-around;
  padding: 0;
  align-items: center;
  border: none;
}

#setting button:hover {
  border: 0.2px 0 0.2px 0;
  border-color: black black white black;
}

#setting button:last-child {
  border: none;
  color: red;
}

#setting button:last-child:hover {
  background-color: rgb(93, 0, 0);
}

#NEW,
#Profil {
  margin: 20px;
  padding: 0;
  height: 80px;
  width: 80px;
  background-size: contain;
  background-repeat: no-repeat;
  background-color: transparent;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 20px;
  z-index: 8;
}

#Profil p {
  color: var(--color);
}

#NEW svg {
  margin: -10px;
  position: absolute;
  transition: 0.5s;
}

#NEW svg:hover {
  transform: rotate(100deg);
}
#STG {
  position: fixed;
  inset: 10%;
  background-color: var(--Dark);
  color: var(--color);
  display: flex;
  flex-direction: column;
  justify-content: start;
  text-align: left;
  border-radius: 10px;
  z-index: 10;
  scale: 0;
  padding: 20px 40px;
  transition: 0.5s;
  overflow-y: auto;
  z-index: 999;
}

#STG svg:not(button svg) {
  position: fixed;
  right: 0;
  top: 0;
}

#STG h1 {
  text-align: center;
  font-size: 40px;
}
#STG h1 btn {
  position: absolute;
  top: 45px;
  left: 45px;
  transition: 0.4s;
}

#STG h1 btn.notAdmin {
  display: none
}

#STG btn button {
  background: transparent;
  border: none;
  outline: none;
  position: relative;
  transition: 0.4s;
}
#STG btn.slide {
   translate: -50px; 
}
#STG btn button.hide {
  opacity: 0;
}
#STG btn button::before {
  content: attr(notif);
  position: absolute;
  display: var(--SHOW,none);
  top: -10px;
  right: 0;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: red;
  color: white;
  text-align: center;
  font-size: 18px;

  }

#STG #Content {
  display: flex;
  flex-direction: column;
  margin: 20px;
  transition: 0.5s;
}
#STG #Content.hide {
  display: none;
}

#STG #UsersMananger {
  display: flex;
  flex-direction: column;
  margin: 20px;
}
#STG #UsersMananger div {
  display: flex;
  text-align: left;
  justify-content: space-between;
  font-size: 20px;
  font-weight: 600;
  margin-top: 5px;
  padding: 5px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.276);
}

#STG.blur {
  scale: 1;
}

#STG.blur body {
  pointer-events: none;
}

#STG.blur ~ #bg {
  position: fixed;
  inset: 0;
  background-color: transparent;
  backdrop-filter: blur(9px);
  z-index: 9;
}

#info svg,
.info svg {
  transition: 0.5s;
}

#info svg:hover,
.info svg:hover {
  animation: shack 0.4s ease-in-out;
}

@keyframes shack {
  0% {
    transform: rotate(20deg);
  }

  40% {
    transform: rotate(-20deg);
  }

  70% {
    transform: rotate(20deg);
  }

  90% {
    transform: rotate(-20deg);
  }

  100% {
    transform: rotate(0);
  }
}

main {
  display: flex;
  flex-direction: row;
  height: 100%;
}

main #nav {
  z-index: 5;
  display: grid;
  grid-row-gap: 15px;
  grid-auto-rows: 60px;
  grid-template-columns: 0 90px;
  justify-content: left;
  background-color: var(--Dark);
  left: 0;
  width: 100px;
  padding-bottom: 30px;
  overflow-y: scroll;
  direction: rtl;
  overflow-x: hidden;
  position: fixed;
  top: 120px;
  bottom: 0;
  scroll-snap-type: x mandatory;
  transition: 0.5s;
}

#nav.wide{
  grid-template-columns:  calc(100% - 90px) 90px;
  grid-auto-flow: column
}
#nav.tight{
  width: 0px;
}

#nav contact{
  grid-column: 2 ;
}

#nav contact.hidden.show.normal,
#nav contact.hidden.show.active.normal{
  translate: 0;
  top: 0;
  left: -5px;
}
#nav.wide info{
  opacity: 1;
  grid-column:1 ;
}
#nav info{
  display: flex;
  flex-direction: row-reverse;
  justify-content: space-around;
  align-items: center;
  color: var(--color);
  opacity: 0;
  transition: 0.4s;
}

/* Contact */
 contact,
#nav button:not(info button) {
  color: white;
  font-size: 19px;
  height: 60px;
  width: 60px;
  display: grid;
  grid-auto-rows: 60px;
  text-align: center;
  border-radius: 50%;
  transition: 0.5s;
  box-sizing: border-box;
  z-index: 2;
  background-size: contain;
  background-repeat: no-repeat;
  scroll-snap-align: center;
  border: none;
  outline: none;
}

#nav contact {
  cursor: pointer;
}
#nav button {
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}

#info contact,
.info contact {
  transform: translateX(-100px);
  margin: 15px;
}

#info contact::before,
.info contact::before {
  transform: translate(45px, 2px);
}

#info contact::after,
.info contact::after {
  transform: translate(45px, 42px);
}

#Chat profiles,
.Chat profiles {
  color: var(--color);
  align-self: center;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 50px;
  width: 150px;
  height: 150px;
  box-sizing: border-box;
  border-radius: 50%;
  transition: 0.5s;
}

#Chat h1,
.Chat h1 {
  text-align: center;
}

.hidden {
  opacity: 0;
  /* left: -100px; */
}

.show {
  opacity: 1;
}

main #nav contact.hidden.show,
main #nav button.hidden.show {
  opacity: 1;
  translate: -15px  10px;
}

main #nav contact.hidden.active {
  left: 0px;
}

main #nav contact.hidden.show.active {
  left: 5px;
  top: 5px;
}

main #nav contact.hidden.active ~ #indicator {
  left: 200px;
}

@media screen and (max-width: 2000px) {
  #nav contact.hidden.show.active ~ #indicator {
    left: 16px;
  }
}

@media screen and (max-width: 1400px) {
  #nav contact.hidden.show.active ~ #indicator {
    left: 14px;
  }
}

@media screen and (max-width: 1100px) {
  #nav contact.hidden.show.active ~ #indicator {
    left: 12px;
  }
}

@media screen and (max-width: 900px) {
  #nav contact.hidden.show.active ~ #indicator {
    left: 10px;
  }
}

contact::after,
#target::after,
#starget::after {
  content: attr(status);
  color: rgb(0, 0, 0);
  display: var(--SD, none);
  justify-content: center;
  align-items: center;
  position: absolute;
  transform: translate(5px, 40px);
  background-color: var(--STT, rgb(5, 255, 5));
  height: 18px;
  min-width: 18px;
  padding: var(--PAD, 0);
  border: 1px solid var(--BGC);
  border-radius: var(--BRD, 50%);
  font-size: 10px;
  font-weight: bolder;
}

#starget::after {
  height: 50px;
  min-width: 30px;
}

contact::before {
  content: attr(Notif);
  display: var(--ND, none);
  justify-content: center;
  align-items: center;
  position: absolute;
  transform: translate(5px, 0px);
  background-color: rgb(255, 5, 5);
  height: 18px;
  width: 18px;
  /* padding: 1px 3px 7px 3px; */
  border: 1px solid black;
  border-radius: 50%;
  font-size: 12px;
  font-weight: 700;
}

main #nav contact.active {
  z-index: 6;
  transform: translateX(5px);
  position: relative;
  top: 0;
}

/* indicator */
main #nav #indicator {
  background: var(--BGC);
  border-radius: 50% 0 0 50%;
  height: 70px;
  width: 80px;
  position: absolute;
  top: 11px;
  transition: 0.4s;
  z-index: 2;
}

#indicator::before {
  content: "";
  position: absolute;
  background: transparent;
  width: 30px;
  height: 30px;
  left: 49px;
  top: -29px;
  border-radius: 0 0 50% 0;
  box-shadow: 0 10px 0 0 var(--BGC);
  transition: 0.4s;
}

#indicator::after {
  content: "";
  position: absolute;
  background: transparent;
  width: 30px;
  height: 30px;
  left: 49px;
  bottom: -29px;
  border-radius: 0 50% 0 0;
  box-shadow: 0 -9px 0 0 var(--BGC);
  transition: 0.4s;
}

/* MSG */
main #msg,
.msg {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: column;
  width: 100%;
  border-radius: 10px 25px 25px 25px;
  background-color: var(--BGC);
  background-image: var(--BGI);
  overflow: hidden;
  transition: 0.2s;
}

#info,
.info {
  background: linear-gradient(
    60deg,
    var(--transparent) 0 30%,
    var(--sDark) 70%
  );
  height: 100px;
  display: flex;
  justify-content: space-between;
  position: absolute;
  inset: 0;
  z-index: 3;
  backdrop-filter: blur(9px);
  transition: 1s;
  overflow: hidden;
}
#info #Cprofile,
.info .VCprofile {
  position: absolute;
  display: flex;
  flex-direction: column;
  pointer-events: none;
  opacity: 0;
  width: 100%;
}

#Cprofile button,
.VCprofile button {
  height: 50px;
  outline: none;
  border: none;
  font-weight: bold;
  font-size: large;
  position: relative;
  cursor: pointer;
  background-color: var(--Dark);
  color: var(--color);
}

#Cprofile button svg,
.VCprofile button svg {
  position: absolute;
  top: 7px;
  right: 10px;
  transition: all 0.4s ease-in 0.2s;
  rotate: x 90deg;
}

#info.Profile #Cprofile button svg,
.info.Profile .VCprofile button svg {
  rotate: x 0deg;
}

#Cprofile button:nth-of-type(1),
#Cprofile button:nth-of-type(8),
.VCprofile button:nth-of-type(1),
.VCprofile button:nth-of-type(8) {
  border-radius: 10px;
}

#Cprofile button:nth-of-type(2),
#Cprofile button:nth-of-type(5),
.VCprofile button:nth-of-type(2),
.VCprofile button:nth-of-type(5) {
  border-radius: 10px 10px 0 0;
  border-bottom: 1px solid var(--color);
}

#Cprofile button:nth-of-type(4),
#Cprofile button:nth-of-type(7),
.VCprofile button:nth-of-type(4),
.VCprofile button:nth-of-type(7) {
  border-top: 1px solid var(--color);
  border-radius: 0 0 10px 10px;
}

#Cprofile contact,
.VCprofile contact {
  transform: none;
  opacity: 1;
  height: 150px;
  width: 150px;
  display: flex;
  justify-content: center;
  align-items: center;
  align-self: center;
  font-size: 60px;
}

#Cprofile contact::before,
.VCprofile contact::before {
  border-radius: 50%;
  transform: translate(55px, -50px);
  height: 20px;
  width: 20px;
  font-size: 20px;
}

.VCprofile contact::after,
#Cprofile contact::after {
  border-radius: 50%;
  transform: translate(55px, 55px);
  padding-top: 1px;
  height: 20px;
  width: 20px;
  font-size: 20px;
}

#stargetname,
#Gtargetname {
  text-align: center;
}

#info.Profile,
.info.Profile {
  background: linear-gradient(60deg, var(--transparent) 30%, var(--sDark) 70%);
  backdrop-filter: blur(10px);
  height: 100%;
  z-index: 5;
  overflow-y: auto;
}

#exit,
.exit {
  position: absolute;
  top: 15px;
  right: 15px;
  rotate: x -90deg;
  z-index: 4;
  animation: none;
}

.info.Profile .btns svg:not(.exit),
#info.Profile #btns svg:not(#exit) {
  rotate: x 90deg;
  animation: none;
  opacity: 0;
}

.info.Profile div .exit,
#info.Profile div #exit {
  opacity: 1;
  rotate: x 0deg;
  transform: translateY(0);
  animation: none;
}

.info.Profile #gtargetname,
#info.Profile #targetname {
  opacity: 0;
}

.info.Profile .VCprofile,
#info.Profile #Cprofile {
  pointer-events: auto;
  opacity: 1;
}

.info div,
#info div {
  transition: 1s;
  padding: 20px;
}

.info div svg,
#info div svg {
  padding: 5px;
}

#Chat,
.Chat {
  padding: 5px;
  display: flex;
  position: absolute;
  inset: 0;
  flex-direction: column;
  overflow-y: auto;
  overflow-x: hidden;
  z-index: 2;
}
#info Mtheme,
.info Mtheme{
  position: relative;
  display: flex;
  justify-content: space-around;
  align-items: center;
  height: 0px;
  transition: 0.4s;
}
#info theme,
.info theme{
  visibility: hidden;
  content: "";
  width: 0px;
  aspect-ratio: 1;
  border-radius: 50%;
  transition: 0.4s;
  background-color: var(--BGC);
  background-image: var(--BGI);
}
#info button,
.info button{
  transition: 0.4s;
}
#info button:nth-of-type(1).show,
.info button:nth-of-type(1).show{
  box-shadow: 0 45px 0 1px var(--Dark);
}
#info button.show ~ Mtheme,
.info button.show ~ Mtheme{
  height: 50px;
}
#info button.show ~ Mtheme theme,
.info button.show ~ Mtheme theme{
  visibility: visible;
  width: 40px;
}
#info Photo,
.info Photo,
#info File,
.info File{
  visibility: hidden;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px , calc(100% / 4)));
  /* grid-gap: 2px; */
  height: 0px;
  overflow-y: auto;
  overflow-x: hidden;
  transition: 0.4s;
}
#info button:nth-of-type(2).show ~ Photo,
.info button:nth-of-type(2).show ~ Photo,
#info button:nth-of-type(3).show ~ File,
.info button:nth-of-type(3).show ~ File{
  visibility: visible;
  height: 200px;
}
#info Photo img,
.info Photo img,
#info Photo video,
.info Photo video{
  width: 100%;
  object-fit: contain;
}


#Chat::before,
.Chat::before {
  content: "";
  display: block;
  padding-bottom: 100px;
}

#Chat::after,
.Chat::after {
  content: "";
  order: 5;
  display: block;
  bottom: 0;
  padding-bottom: 50px;
}

#text,
.text {
  padding-top: 10px;
  background: rgba(0, 0, 0, 0.247);
  padding-right: 10px;
  width: 100%;
  display: flex;
  justify-content: flex-start;
  position: absolute;
  order: 4;
  z-index: 3;
  bottom: 0;
  right: 0;
  backdrop-filter: blur(9px);
}

#text textarea,
.text textarea {
  display: flex;
  border: none;
  outline: none;
  resize: none;
  width: 100%;
  font-size: 25px;
  background-color: var(--sDark);
  border-radius: 20px;
  padding-top: 11px;
  padding-left: 20px;
  margin-bottom: 5px;
  max-height: 150px;
  min-height: 50px;
  color: var(--color);
  overflow: hidden;
}

#text textarea::-webkit-scrollbar-thumb,
.text textarea::-webkit-scrollbar-thumb {
  background: #878787;
  border-radius: 100px;
}

#text textarea::-webkit-scrollbar-thumb:hover,
.text textarea::-webkit-scrollbar-thumb:hover {
  background: #555;
}

#text div:not(form div) {
  position: relative;
  width: 0;
  transition: 0.5s;
  background: var(--sDark);
  height: 50px;
  border-radius: 20px;
  overflow: hidden;
}

#text div.record {
  width: 100%;
}
#text div.record ~ svg {
  display: none;
}
#text div.record ~ form {
  width: 0;
}

#text div.record #chataudio {
  background: var(--sDark);
  height: 50px;
  translate: 0;
  position: absolute;
}

#text form,
.text form {
  display: flex;
  justify-content: flex-end;
  width: 100%;
  transition: 0.5s;
}

receiver,
sender
 {
  display: flex;
  font-size: 25px;
  margin: 1px;
  padding: 8px;
  max-width: 60%;
  border-radius: 20px;
  position: relative;
  user-select: text;
  transition: 0.4s;
  white-space: pre-wrap;      /* CSS3 */   
  white-space: -moz-pre-wrap; /* Firefox */    
  white-space: -pre-wrap;     /* Opera <7 */   
  white-space: -o-pre-wrap;   /* Opera 7 */    
  word-wrap: break-word;      /* IE */
}

sender reply,
receiver reply{
  margin: 0;
  padding-bottom: 10px;
  z-index: -1;
  right:0 ;
  bottom: 80%;
  position: absolute;
  color: gray;
  background-color: var(--sDark);
  opacity: 0.8;
  border-radius: 20px;
}
sender reply svg,
receiver reply svg{
  height: 100px;
  width: 100px;
}
receiver reply{
  right:auto ;
  left:0 ;
}

sender reply::before,
receiver reply::before{
  content: attr(text);
  color: var(--color);
  position: absolute;
  bottom: 100%;
  right: 10px;
  width: max-content;
  font-size: medium;
}
receiver reply::before{
  right: auto;
  left: 10px;
}

sender reply p,
receiver reply p {
  margin: 5px 15px;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 3; /* Show only three lines of text */
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  white-space: normal; /* Set it back to normal to enable line wrapping */
  white-space: pre-wrap;      /* CSS3 */   
  white-space: -moz-pre-wrap; /* Firefox */    
  white-space: -pre-wrap;     /* Opera <7 */   
  white-space: -o-pre-wrap;   /* Opera 7 */    
  word-wrap: break-word;      /* IE */
}

receiver.GetReplyed,
sender.GetReplyed {
  margin-top: 60px;
}
receiver react,
sender react {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  right: 0;
  transform: translate(-8px, 28px);
  width: 30px;
  height: 30px;
  border: 2px solid var(--BGC);
  background-color: blue;
  opacity: 0;
}

receiver react {
  top: calc(100% - 40px);
  left: calc(100% - 20px);
}

sender.liked {
  margin-bottom: 20px;
}

sender.liked > react {
  opacity: 1;
}

sender.liked > react svg {
  animation: LIKED 1s ease-in;
}

receiver.liked {
  margin-bottom: 20px;
}

receiver.liked > react {
  opacity: 1;
}

receiver.liked > react svg {
  animation: LIKED 1s ease-in;
}

@keyframes LIKED {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(2);
  }

  100% {
    transform: scale(1);
  }
}

react svg {
  padding-left: 2px;
  width: 25px;
  height: 25px;
}

receiver,
.Chat img.receiver,
#Chat img.receiver {
  align-self: flex-start;
  background-color: var(--receiver);
  white-space: pre-wrap;      /* CSS3 */   
  white-space: -moz-pre-wrap; /* Firefox */    
  white-space: -pre-wrap;     /* Opera <7 */   
  white-space: -o-pre-wrap;   /* Opera 7 */    
  word-wrap: break-word;      /* IE */
}

img, video{
  border-radius: 10px;
}
.Chat contact name {
  position: absolute;
  top: -20px;
  left: 85px;
}

.push {
  animation: PUSH 0.4s ease-in-out;
}

@keyframes PUSH {
  0% {
    translate: 0 100px;
    position: relative;
    opacity: 0.2;
  }

  100% {
    translate: 0;
    position: relative;
    opacity: 1;
  }
}

.sender div,
.receiver div ,
.file div ,
sender div,
receiver div {
  background-color: transparent;
  border: none;
  opacity: 0;
  content: attr(time);
  width: 110px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: -110px;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding-right: 10px;
}

.receiver div ,
.file div ,
receiver div {
  flex-direction: row-reverse;
  left: 100%;
}

sender div *,
receiver div * {
  margin-left: 5px;
}

sender div p,
receiver div p {
  color: var(--color);
  font-size: 14px;
}

.sender:hover div,
.receiver:hover div ,
.file:hover div ,
sender:hover div,
receiver:hover div,
receiver:hover [id^="R"] {
  opacity: 1;
}

sender,
.Chat *.sender,
#Chat *.sender {
  max-width: 40%;
  align-self: flex-end;
  justify-content: flex-end;
  flex-direction: column;
  background-color: var(--sender);
  position: relative;
  white-space: pre-wrap;      /* CSS3 */   
  white-space: -moz-pre-wrap; /* Firefox */    
  white-space: -pre-wrap;     /* Opera <7 */   
  white-space: -o-pre-wrap;   /* Opera 7 */    
  word-wrap: break-word;      /* IE */
}

.Chat *.sender,
#Chat *.sender {
  max-width: 60%;
  background: transparent;
}

sender svg {
  transform: scaleX(-1);
}

sender div svg,
sender react svg {
  transform: none;
}

#Gack,
#ack {
  order: 2;
  text-align: right;
  color: rgb(36, 36, 36);
  font-size: 15px;
  margin-right: 8px;
  padding-bottom: 10px;
}

#GMyReply ,
#MyReply {
  visibility: hidden;
  opacity:  0;
  object-fit: contain;
  order: 3;
  width: calc(100% - 20px) ;
  background: rgba(0, 0, 0, 0.247);
  border-radius: 10px 10px 0 0;
  padding: 10px;
  position: absolute;
  z-index: 6;
  bottom: 0;
  margin: 0 10px;
  backdrop-filter: blur(9px);
  transition: 0.2s;
}
#GMyReply.reply ,
#MyReply.reply {
  visibility: visible;
  opacity: 1;
  bottom: 65px;
}
#GMyReply svg ,
#MyReply svg ,
#GMyReply img ,
#MyReply img ,
#GMyReply video ,
#MyReply video {
  max-height: 100px;
  max-width: 100px;
}

#MyReply.reply ~ #Chat::after,
#GMyReply.reply ~ .Chat::after {
  padding-bottom: 200px;
}

#GMyReply h2 ,
#MyReply h2 {
  color: var(--color);
  padding: 0;
  margin: 0;
}
#GMyReply button ,
#MyReply button {
  border: none;
  background-color: transparent;
  font-size: 30px;
  rotate: 45deg;
  position: absolute;
  top: 5px;
  right: 5px;
  transition: 0.2s;
}
#GMyReply button:hover ,
#MyReply button:hover {
  color: silver;
}
#GMyReply p ,
#MyReply p {
  color: gray;
  width: 90%;
  text-overflow: ellipsis; /* enables ellipsis */
  white-space: nowrap; /* keeps the text in a single line */
  overflow: hidden; /* keeps the element from overflowing its parent */
}

/* ICONs */

#LIKE,
#GLIKE {
  margin: 0;
  cursor: pointer;
  position: relative;
}

#LIKE path,
#GLIKE path {
  fill: #fdfdfd;
  stroke: var(--BGC);
}

sender button #LIKE path,
receiver button #LIKE path ,
sender button #GLIKE path,
receiver button #GLIKE path {
  fill: #000;
}

sender button,
receiver button {
  margin: 0;
  border: none;
  outline: none;
  background: transparent;
  width: 20px;
  padding-right: 25px;
}

sender button #LIKE,
receiver button #LIKE ,
sender button #GLIKE,
receiver button #GLIKE {
  height: 20px;
  width: 20px;
}

sender button #REPLY,
receiver button #REPLY {
  cursor: pointer;
}

receiver div button #REPLY {
  position: relative;
  left: -10px;
  transform: scaleX(-1);
}

sender button svg {
  pointer-events: none;
}

dialog {
  width: 100%;
  height: 100%;
  border: none;
  border-radius: 10px;
  background: transparent;
  backdrop-filter: blur(9px);
  overflow: hidden;
}

dialog::backdrop {
  backdrop-filter: blur(9px);
}

.top {
  display: flex;
  justify-content: end;
  align-items: center;
  text-align: center;
  height: 5%;
  margin-bottom: 10px;
}

.content {
  display: flex;
  justify-content: center;
  height: 85%;
}

.content img,
.content object {
  width: 80%;
  height: 100%;
  border-radius: 10px;
}

.bottom {
  height: 10%;
}

video {
  border-radius: 10px;
  width: 400px;
}

.file {
  padding-left: 20px;
  min-height: 70px;
  height: 70px;
  max-width: 60%;
  display: flex;
  flex-direction: row-reverse;
  justify-content: left;
  align-items: center;
  overflow: hidden;
  cursor: pointer;
}
.file p {
  text-overflow: ellipsis; /* enables ellipsis */
  white-space: nowrap; /* keeps the text in a single line */
  overflow: hidden; /* keeps the element from overflowing its parent */
}

.file button:not([id^="R"] button) {
  background-color: white;
  width: 40px;
  height: 40px;
  margin-right: 20px;
  border-radius: 50%;
  cursor: pointer;
}

receiver.file button:not([id^="R"] button) {
  scale: -1 1;
}
.file button svg:not([id^="R"] button svg) {
  padding: 2px 0 0 2px;
  scale: -1.2 1.2;
}

#msg #text div button,
#msg #text button,
#msg #text svg,
.msg .text div button,
.msg .text button {
  background-color: transparent;
  outline: none;
  border: none;
  margin-left: 8px;
  padding: 0;
}

/* Scrolbar */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: none;
  border-radius: 50px;
  opacity: 0;
}
#Chat::-webkit-scrollbar-track ,
.Chat::-webkit-scrollbar-track {
  margin-block-start: 100px;
  margin-block-end: 60px;
}

::-webkit-scrollbar-thumb {
  background: var(--color);
  border-radius: 100px;
  height: 10px;
  opacity: 0;
}

#info::-webkit-scrollbar-thumb,
.info::-webkit-scrollbar-thumb {
  background: #cfcfcf;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* Typing Indicator */
.typingIndicatorContainer {
  display: flex;
  order: 3;
  z-index: 5;
  flex: none;
  align-items: flex-end;
  opacity: 1;
  transition: 0.4s;
  height: 0;
  transform: translateX(-200px);
}

.typingIndicatorContainer.write {
  height: 20px;
  position: relative;
  opacity: 1;
  transform: translateX(0);
  padding: 30px 0 30px 0;
}

.typingIndicatorBubble {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 52px;
  height: 30px;
  margin: 0px 8px;
  background-color: var(--sDark);
  border-radius: 20px;
}

.typingIndicatorBubbleDot {
  width: 6px;
  height: 6px;
  margin-right: 4px;
  background-color: rgb(150, 150, 150);
  border-radius: 50%;
  animation-name: bounce;
  animation-duration: 1.3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.typingIndicatorBubbleDot:first-of-type {
  margin: 0px 4px;
}

.typingIndicatorBubbleDot:nth-of-type(2) {
  animation-delay: 0.15s;
}

.typingIndicatorBubbleDot:nth-of-type(3) {
  animation-delay: 0.3s;
}

@keyframes bounce {
  0%,
  60%,
  100% {
    transform: translateY(0);
  }

  30% {
    transform: translateY(-6px);
  }
}

/* Notification */
#Notif {
  position: absolute;
  background: #fff;
  border-radius: 10px;
  z-index: 99;
  overflow: hidden;
  opacity: 0;
  scale: 0;
}

#Notif p {
  padding: 10px;
}

#Notif button {
  border: none;
  width: 250px;
  height: 40px;
  font-size: 20px;
  transition: 0.4s;
}

#true:hover {
  background-color: #00ff4083;
}

#false:hover {
  background-color: #ff000083;
}

#Notif.show {
  opacity: 1;
  scale: 1;
  top: 40%;
  align-self: center;
}

#Notif.show ~ #bg {
  position: absolute;
  inset: 0;
  backdrop-filter: blur(9px);
  z-index: 9;
}

/* Audio Animation */

canvas {
  position: absolute;
  inset: 0;
  width: 100%;
  translate: 0px -60px;
  z-index: 3;
}

.audio-player {
  position: relative;
  width: 100%;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
}

.player-controls {
  display: flex;
  align-items: center;
  justify-content: end;
  flex-grow: 1;
  margin: 0 8px;
}

.player-controls:hover #playpause {
  opacity: 1;
}

.playpause-container {
  width: 24px;
  height: 24px;
  margin-right: 8px;
}

#playpause {
  position: absolute;
  z-index: 99;
  opacity: 0;
  /* translate: 50px; */
  transition: 0.5s;
}

.play {
  width: 0;
  height: 0;
  background-color: #fff;
  border-top: 12px solid #fff;
  border-bottom: 12px solid #fff;
  border-right: 12px solid #fff;
  border-left: 18px solid #000000;
}

.pause {
  width: 18px;
  height: 24px;
  border: 0px solid transparent;
  background-color: #000000;
}

.timeline-container {
  width: 600px;
}

.timeline {
  width: 100%;
  height: 70px;
  background-color: #4d4d4d;
  border-radius: 20px;
  position: relative;
  overflow: hidden;
}

.progress {
  width: 0%;
  height: 70px;
  background-color: #1877f2;
  position: absolute;
  top: 0;
  left: 0;
  transition: 0.399s;
}

.audio-waves {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 50px;
  background-color: transparent;
}

#CallShow{
  position: absolute;
  width: 400px;
  height: 500px;
  border-radius: 10px;
  top: calc((100% - 500px) / 2);
  left: calc((100% - 400px) / 2);
  background-color: var(--Dark);
  z-index: 999;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  animation: CallShack 0.1s ease-in infinite;
  transform: translateY(-200%);
  transition: 0.5s;
}
#CallShow.show{
  transform: translateY(0);
}

@keyframes CallShack {
  from{
    translate: -1px;
  }
  to{
    translate: 1px;
  }
}

#CallShow btn{
  display: flex;
  justify-content: space-around;
  align-items: center;
}
#CallShow button{
  height: 80px;
  aspect-ratio: 1;
  border-radius: 50%;
}
#CallShow div{
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;
}
#CallShow contact{
  scale: 2;
}
#CallShow h1{
  text-align: center;
  color: var(--color);
}
#CallShow button{
  border: none;
  outline: none;
  transition: .4s;
}
#CallShow #true{
  background-color: forestgreen;
}
#CallShow #false{
  rotate: 135deg;
  background-color: rgb(93, 0, 0);
}
#CallShow #true:hover{
  scale: 1.1;
  background-color: rgb(28, 189, 28);
}
#CallShow #false:hover{
  scale: 1.1;
  background-color: rgb(149, 0, 0);
}

button{
  cursor: pointer;
}

svg{
  fill: var(--color);
}